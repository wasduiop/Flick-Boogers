local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Flick Boogers | Hub",
   Icon = "align-left", -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Flick Boogers | Hub",
   LoadingSubtitle = "By wasduiop",
   Theme = "DarkBlue", -- Check https://docs.sirius.f44tthjgcgu7fgmenu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = FlickBoogersHub, -- Create a custom folder for your hub/game
      FileName = "FlickBoogersConfigs"
   },

   Discord = {
      Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "arWjGHMg9Q", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab1 = Window:CreateTab("Tab Example", 4483362458) -- Title, Imag

local Button = Tab1:CreateButton({
   Name = "Button Example",
   Callback = function()
      game.Players.LocalPlayer.Character.Head:Remove()
   -- The function that takes place when the button is pressed
   end,
})

local Dropdown = Tab1:CreateDropdown({
   Name = "Respawn in map: ",
   Options = {"House","Hospital"},
   CurrentOption = {"Option 1"},
   MultipleOptions = false,
   Flag = "Dropdown1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Options)
   -- The function that takes place when the selected option is changed
   -- The variable (Options) is a table of strings for the current selected options
      if (Options == House) then
         game.Players.LocalPlayer.Character.Head:Remove()
         wait(1)
      end
   end,
})
