local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Rayfield Example Window",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab1 = Window:CreateTab("Main", "plus") -- Title, Imag

   local Button = Tab1:CreateButton({
   Name = "Reset Character",
   Callback = function()
      game.Players.LocalPlayer.Character.Head:Remove()
   end,
})

local Dropdown = Tab1:CreateDropdown({
   Name = "Respawn in map 7.5 seconds",
   Options = {"Off", "Area 8", "Farmstead", "Hospital", "House", "Sewers", "Woods"},
   CurrentOption = {"Off"},
   MultipleOptions = false,
   Flag = "RespawnInMap", -- A flag is the identifier for the configuration file, make lement has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Options)
      if (Options[1] == "House") then
         print("Reseting to house.")
         -- local humanDesc = game.Players.LocalPlayer.Character.Humanoid.HumanoidDescription
         -- local playerShirt = game.Players.LocalPlayer.Character.Shirt
         -- local playerPants = game.Players.LocalPlayer.Character.Pants.PantsTemplate
         -- local playerHair = game.Players.LocalPlayer.Character
         -- https://devforum.roblox.com/t/how-do-i-save-a-color3-value/1132835/3
         -- local playerSkin = {humanDesc.HeadColor.R, humanDesc.HeadColor.G, humanDesc.HeadColor.B}
         -- local playerFace = game.Players.LocalPlayer.Character.Head.face.Texture
         game.Players.LocalPlayer.Character.Head:Remove()
         wait(6)
         game.Players.LocalPlayer.PlayerGui.Cutscenes.MidPanel:Destroy()
         game.Lighting.Blur:Destroy()
         game.Workspace.Camera:Remove()
         wait(0.1)
         game.Workspace.Camera.CameraType = Enum.CameraType.Custom
         game.Workspace.Camera.CameraSubject = game.Players.LocalPlayer.Character.HumanoidRootPart
         game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
         wait(0.1)
         game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-89, 5, 17)
         -- wait(0.2)
         -- https://www.reddit.com/r/robloxgamedev/comments/1fgjfhs/is_there_a_way_to_add_a_pantsshirt_onto_a_rig/?rdt=34316
         -- game.Players.LocalPlayer.Character.Instance.new("Shirt").ShirtTemplate = playerShirt
         -- game.Players.LocalPlayer.Character.Pants.PantsTemplate = playerPants
         -- game.Players.LocalPlayer.Character.Humanoid.HumanoidDescription.HeadColor = Color3.new(playerSkin[1], playerSkin[2], playerSkin[3])
         -- game.Players.LocalPlayer.Character.Head.face.Texture = playerFace
         print("Reset to house success")
      end

      if (Options[1] == "Hospital") then
         print("Reseting to Hospital")
         game.Players.LocalPlayer.Character.Head:Remove()
         wait(6)
         game.Players.LocalPlayer.PlayerGui.Cutscenes.MidPanel:Destroy()
         game.Lighting.Blur:Destroy()
         game.Workspace.Camera:Remove()
         wait(0.1)
         game.Workspace.Camera.CameraType = Enum.CameraType.Custom
         game.Workspace.Camera.CameraSubject = game.Players.LocalPlayer.Character.HumanoidRootPart
         game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
         wait(0.1)
         game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(424, 16, 20)
         print("Reset to Hospital success")
      end

      if (Options[1] == "Area 8") then
         print("Resetting to Area 8")
         game.Players.LocalPlayer.Character.Head:Remove()
         wait(6)
         game.Players.LocalPlayer.PlayerGui.Cutscenes.MidPanel:Destroy()
         game.Lighting.Blur:Destroy()
         game.Workspace.Camera:Remove()
         wait(0.1)
         game.Workspace.Camera.CameraType = Enum.CameraType.Custom
         game.Workspace.Camera.CameraSubject = game.Players.LocalPlayer.Character.HumanoidRootPart
         game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
         wait(0.1)
         game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-443, 39, -2)
         print("Reset to Area 8 success")
      end

      if (Options[1] == "Farmstead") then
         print("Resetting to Farmstead")
         game.Players.LocalPlayer.Character.Head:Remove()
         wait(6)
         game.Players.LocalPlayer.PlayerGui.Cutscenes.MidPanel:Destroy()
         game.Lighting.Blur:Destroy()
         game.Workspace.Camera:Remove()
         wait(0.1)
         game.Workspace.Camera.CameraType = Enum.CameraType.Custom
         game.Workspace.Camera.CameraSubject = game.Players.LocalPlayer.Character.HumanoidRootPart
         game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
         wait(0.1)
         game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(107, 5 38)
         print("Reset to Farmstead success")
      end

      if (Options[1] == "Sewers") then
         print("Resetting to Sewers")
         game.Players.LocalPlayer.Character.Head:Remove()
         wait(6)
         game.Players.LocalPlayer.PlayerGui.Cutscenes.MidPanel:Destroy()
         game.Lighting.Blur:Destroy()
         game.Workspace.Camera:Remove()
         wait(0.1)
         game.Workspace.Camera.CameraType = Enum.CameraType.Custom
         game.Workspace.Camera.CameraSubject = game.Players.LocalPlayer.Character.HumanoidRootPart
         game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
         wait(0.1)
         game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-260,13,102)
         print("Reset to Sewers success")
      end

      if (Options[1] == "Woods") then
         print("Resetting to Woods")
         game.Players.LocalPlayer.Character.Head:Remove()
         wait(6)
         game.Players.LocalPlayer.PlayerGui.Cutscenes.MidPanel:Destroy()
         game.Lighting.Blur:Destroy()
         game.Workspace.Camera:Remove()
         wait(0.1)
         game.Workspace.Camera.CameraType = Enum.CameraType.Custom
         game.Workspace.Camera.CameraSubject = game.Players.LocalPlayer.Character.HumanoidRootPart
         game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
         wait(0.1)
         game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(610,17,49)
         print("Reset to Woods success")
      end

      if (Options[1] == "Off") then
         print("Default")
      else
         print("noinputError")
      end
   end,
})

local Tab2 = Window:CreateTab("Visual", "eye") -- Title, Image

local Toggle = Tab2:CreateToggle({
   Name = "Fullbright",
   CurrentValue = false,
   Flag = "Fullbright", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      if (Value) then
         game:GetService("Lighting").Brightness = 2
         game:GetService("Lighting").ClockTime = 14
         game:GetService("Lighting").GlobalShadows = false
         game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(128, 128, 128)
         print("Fullbright On")
      else
         game:GetService("Lighting").Brightness = 0
         game:GetService("Lighting").ClockTime = 0
         game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(0, 0, 0)
         print("Fullbright Off")
      end
   end,
})

